{"version":3,"sources":["00-config/_font-faces.scss","04-organisms/slider.css","04-organisms/slider.scss","00-config/_mixins.scss","00-config/_fonts.scss","00-config/_colors.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AASA;EACE,yCAAA;;EACA,kBAAA;;EACA,gBAAA;;EACA,mDAAA;ACRF;;ACJA;EACE,oBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,wBAAA;MAAA,qBAAA;UAAA,uBAAA;EACA,kBAAA;EACA,WAAA;ADMF;;ACLE;EACE,YAAA;EACA,WAAA;ADOJ;;ACLI;EACE,aAAA;ADON;;ACHI;EACE,aAAA;ADKN;;ACAA;EACE,cAAA;ADGF;;ACFE;EACE,aAAA;EACA,YAAA;ADIJ;;ACDE;EACE,YAAA;EACA,kBAAA;ADGJ;;ACFI;ECmCF,yCChEa;EDkEb,eAAA;EACA,iBAAA;EACA,cElEY;AJmCd;;ACLI;ECQF,yCCxCa;ED0Cb,eAAA;EACA,iBAAA;EACA,cEzCW;AJwCb;;ACRI;EACE,uDAAA;ADUN;;AKgBI;EJpCF;IAcI,iBAAA;EDUJ;AACF;;ACPE;EACE,aAAA;EACA,YAAA;EACA,kBAAA;EACA,MAAA;EACA,WAAA;EACA,WAAA;EACA,8DAAA;ADSJ;;ACPE;EACE,kBAAA;EACA,kBAAA;ADSJ;;ACPI;EACE,cAAA;EACA,kBAAA;EACA,QAAA;EACA,SAAA;EACA,UAAA;EACA,WAAA;EACA,YAAA;ADSN;;ACPI;EACE,+DAAA;UAAA,uDAAA;EACA,SAAA;EACA,kBAAA;ADSN;;ACPI;EACE,+DAAA;UAAA,uDAAA;ADSN;;ACPI;EACE,+DAAA;UAAA,uDAAA;ADSN;;ACPI;EACE,oEAAA;UAAA,4DAAA;ADSN;;ACPI;EACE,+DAAA;UAAA,uDAAA;ADSN;;ACPI;EACE,iEAAA;UAAA,yDAAA;ADSN;;ACPI;EACE,kEAAA;UAAA,0DAAA;ADSN;;ACPI;EACE,kEAAA;UAAA,0DAAA;ADSN;;AKrCI;EJ3CJ;IA4EI,cAAA;EDQF;AACF;;AK1CI;EJ3CJ;IAgFI,oBAAA;IAAA,oBAAA;IAAA,aAAA;IACA,yBAAA;QAAA,sBAAA;YAAA,mBAAA;IACA,kBAAA;EDSF;AACF","file":"../../components/04-organisms/slider.css","sourcesContent":["$font-path: '/themes/myproject/fonts';\n\n// @font-face {\n//   font-family: 'averto';\n//   font-style: normal;\n//   font-weight: 400;\n//   src: url(#{$font-path}/averto/Averto.ttf);\n// }\n\n@font-face {\n  font-family: 'Averta Demo PE Cutted Demo';\n  font-style: normal;\n  font-weight: 400;\n  src: url(#{$font-path}/averto/Averto.ttf);\n}\n","@font-face {\n  font-family: \"Averta Demo PE Cutted Demo\";\n  font-style: normal;\n  font-weight: 400;\n  src: url(/themes/myproject/fonts/averto/Averto.ttf);\n}\n.slick-dots {\n  display: flex;\n  justify-content: center;\n  position: relative;\n  top: -13rem;\n}\n.slick-dots li {\n  height: 16px;\n  width: 16px;\n}\n.slick-dots li button {\n  display: none;\n}\n.slick-dots li:hover button {\n  display: none;\n}\n\n.astudio__slick-slider {\n  display: block;\n}\n.astudio__slick-slider-b1 img {\n  height: 389px;\n  width: 389px;\n}\n.astudio__slick-slider-b2 {\n  width: 412px;\n  margin-right: 38px;\n}\n.astudio__slick-slider-b2 h2 {\n  font-family: \"Averta Demo PE Cutted Demo\";\n  font-size: 24px;\n  line-height: 30px;\n  color: #000000;\n}\n.astudio__slick-slider-b2 p {\n  font-family: \"Averta Demo PE Cutted Demo\";\n  font-size: 16px;\n  line-height: 25px;\n  color: #565656;\n}\n.astudio__slick-slider-b2-dotImg {\n  background-image: url(\".../../../../../images/Dot.png\");\n}\n@media (min-width: 768px) and (max-width: 1024px) {\n  .astudio__slick-slider-b2 {\n    margin-left: 14px;\n  }\n}\n.astudio__slick-slider-roundImg {\n  height: 184px;\n  width: 184px;\n  position: relative;\n  top: 0;\n  z-index: -5;\n  right: 5rem;\n  background-image: url(\".../../../../../images/Ellipse 93.png\");\n}\n.astudio__slick-slider_roundImgs {\n  position: relative;\n  border-radius: 50%;\n}\n.astudio__slick-slider_roundImgs a {\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 4em;\n  height: 4em;\n  margin: -2em;\n}\n.astudio__slick-slider_roundImgs-bl1 {\n  transform: rotate(261deg) translate(-8em) rotate(96deg);\n  top: 50px;\n  position: relative;\n}\n.astudio__slick-slider_roundImgs-bl2 {\n  transform: rotate(80deg) translate(14em) rotate(-81deg);\n}\n.astudio__slick-slider_roundImgs-bl3 {\n  transform: rotate(63deg) translate(15em) rotate(-64deg);\n}\n.astudio__slick-slider_roundImgs-bl4 {\n  transform: rotate(199deg) translate(-16.8em) rotate(-205deg);\n}\n.astudio__slick-slider_roundImgs-bl5 {\n  transform: rotate(-12deg) translate(19em) rotate(14deg);\n}\n.astudio__slick-slider_roundImgs-bl6 {\n  transform: rotate(322deg) translate(21em) rotate(-325deg);\n}\n.astudio__slick-slider_roundImgs-bl7 {\n  transform: rotate(116deg) translate(-22em) rotate(-118deg);\n}\n.astudio__slick-slider_roundImgs-bl8 {\n  transform: rotate(116deg) translate(-19em) rotate(-120deg);\n}\n@media (min-width: 768px) and (max-width: 1024px) {\n  .astudio__slick-slider {\n    display: block;\n  }\n}\n@media (min-width: 1025px) {\n  .astudio__slick-slider {\n    display: flex;\n    align-items: center;\n    margin-left: 119px;\n  }\n}","@import '../config.all';\n.slick-dots {\n  display: flex;\n  justify-content: center;\n  position: relative;\n  top: -13rem;\n  li {\n    height: 16px;\n    width: 16px;\n\n    button {\n      display: none;\n    }\n  }\n  li:hover {\n    button {\n      display: none;\n    }\n  }\n}\n\n.astudio__slick-slider {\n  display: block;\n  &-b1 img {\n    height: 389px;\n    width: 389px;\n  }\n\n  &-b2 {\n    width: 412px;\n    margin-right: 38px;\n    h2 {\n      @include heading();\n    }\n    p {\n      @include text-1();\n    }\n    &-dotImg {\n      background-image: url('.../../../../../images/Dot.png');\n    }\n\n    @include breakpoint($tablet) {\n      margin-left: 14px;\n    }\n  }\n\n  &-roundImg {\n    height: 184px;\n    width: 184px;\n    position: relative;\n    top: 0;\n    z-index: -5;\n    right: 5rem;\n    background-image: url('.../../../../../images/Ellipse 93.png');\n  }\n  &_roundImgs {\n    position: relative;\n    border-radius: 50%;\n\n    a {\n      display: block;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 4em;\n      height: 4em;\n      margin: -2em;\n    }\n    &-bl1 {\n      transform: rotate(261deg) translate(-8em) rotate(96deg);\n      top: 50px;\n      position: relative;\n    }\n    &-bl2 {\n      transform: rotate(80deg) translate(14em) rotate(-81deg);\n    }\n    &-bl3 {\n      transform: rotate(63deg) translate(15em) rotate(-64deg);\n    }\n    &-bl4 {\n      transform: rotate(199deg) translate(-16.8em) rotate(-205deg);\n    }\n    &-bl5 {\n      transform: rotate(-12deg) translate(19em) rotate(14deg);\n    }\n    &-bl6 {\n      transform: rotate(322deg) translate(21em) rotate(-325deg);\n    }\n    &-bl7 {\n      transform: rotate(116deg) translate(-22em) rotate(-118deg);\n    }\n    &-bl8 {\n      transform: rotate(116deg) translate(-19em) rotate(-120deg);\n    }\n  }\n\n  @include breakpoint($tablet) {\n    display: block;\n  }\n\n  @include breakpoint($desktop) {\n    display: flex;\n    align-items: center;\n    margin-left: 119px;\n  }\n}\n","@mixin d-flex {\n  display: flex;\n  align-items: center;\n}\n\n@mixin d-flex-end {\n  display: flex;\n  justify-content: flex-end;\n}\n@mixin text-grey {\n  font-family: $font-primary;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n  color: $color-grey-2;\n}\n\n@mixin text-black {\n  font-family: $font-primary;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 20px;\n  color: $color-black;\n}\n\n@mixin text-small {\n  font-family: $font-primary;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n  color: $color-grey;\n}\n\n@mixin text {\n  font-family: $font-primary;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 28px;\n  color: $color-black;\n}\n\n@mixin text-1 {\n  font-family: $font-primary;\n  // font-weight: 400;\n  font-size: 16px;\n  line-height: 25px;\n  color: $color-grey;\n}\n\n@mixin text-2 {\n  font-family: $font-primary;\n  font-weight: 400;\n  font-family: 18px;\n  line-height: 28px;\n  color: $color-grey-50;\n}\n\n@mixin heading-small {\n  font-family: $font-primary;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 30px;\n  color: #000000;\n}\n\n@mixin heading {\n  font-family: $font-primary;\n  // font-weight: 400;\n  font-size: 24px;\n  line-height: 30px;\n  color: $color-black;\n}\n\n@mixin heading-1 {\n  font-family: $font-primary;\n  // font-weight: 400;\n  font-size: 40px;\n  line-height: 49.44px;\n  color: $color-black;\n}\n\n@mixin bg-icon {\n  background-repeat: no-repeat;\n  display: block;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  text-align: center;\n  // padding: 8px;\n  text-decoration: none;\n  margin-right: 16px;\n}\n\n@mixin button {\n  margin-bottom: 30px;\n  background-color: $color-blue;\n  border-radius: 60px;\n  padding: 20px 40px;\n  border: none;\n  a {\n    font-family: $font-primary;\n    color: $color-white;\n    text-decoration: none;\n  }\n}\n\n@mixin cs-trImg {\n  height: 129px;\n  width: 129px;\n  position: relative;\n  top: -12.2rem;\n  background: url('.../../../../../images/Ellipse 85.png');\n}\n\n@mixin cs-trImg2 {\n  height: 178px;\n  width: 178px;\n  position: absolute;\n  right: 8rem;\n  z-index: -5;\n  top: 28rem;\n  background: url('.../../../../../images/Rectangle 23.png');\n}\n\n@mixin business-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: $color-white;\n  box-shadow: 0px 2px 4px $color-grey-1;\n  border-radius: 40px;\n  padding: 0 32px 57px;\n  box-sizing: border-box;\n  margin: 0 34px 30px 0;\n}\n\n@mixin business-card-trImg {\n  height: 178px;\n  width: 178px;\n  z-index: -5;\n  position: absolute;\n  margin-left: 82px;\n  margin-bottom: 110px;\n  background-image: url('.../../../../../images/Rectangle 25.png');\n}\n\n@mixin business-card-dotImg {\n  width: 405px;\n  height: 154px;\n  z-index: -5;\n  position: absolute;\n  top: 93rem;\n  margin-left: 125px;\n  background-image: url('.../../../../../images/Group 70.png');\n}\n\n@mixin bg-square-card {\n  height: 121px;\n  width: 121px;\n  background-image: url('.../../../../../images/Rectangle 28.png');\n}\n\n@mixin digital-product-trimImg {\n  position: absolute;\n  left: 43rem;\n  width: 178px;\n  height: 178px;\n  z-index: -5;\n  background-image: url('.../../../../../images/Rectangle 26.png');\n  margin-top: 12px;\n}\n\n@mixin dp-videoIcon {\n  background-image: url('.../../../../../images/Group 7.png');\n  position: relative;\n  width: 78px;\n  height: 78px;\n  left: 14rem;\n  top: 13rem;\n}\n\n@mixin dp-roundImg {\n  height: 129px;\n  width: 129px;\n  position: relative;\n  top: 28rem;\n  left: 34rem;\n  z-index: -5;\n  background: url('.../../../../../images/Ellipse 86.png');\n}\n","// Define fonts scss variables here\n// $font-primary: 'averto', sans-serif;\n$font-primary: 'Averta Demo PE Cutted Demo';\n","// Define colors scss variables here.\n$color-white: #ffffff;\n$color-white-1: #f1f1f1;\n$color-white-2: #f4f9ff;\n$color-black: #000000;\n$color-grey: #565656;\n\n$color-grey-1: #808080;\n$color-grey-2: #959595;\n\n$color-grey-50: #757575;\n\n$color-blue: #2639ed;\n\n$color-blue-1: #3b5998;\n$color-blue-2: #55acee;\n$color-blue-3: #007ab9;\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"]}